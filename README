# AutoMap: A Lightweight Dependency for Automatic Object Mapping in Spring Applications

[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)
[![GitHub Stars](https://img.shields.io/github/stars/hassan-abidar/AutoMap-Dependency?style=social)](https://github.com/hassan-abidar/AutoMap-Dependency)

AutoMap is a lightweight and easy-to-use dependency designed to simplify object mapping in Spring applications. With AutoMap, you can automatically map fields between **DTOs (Data Transfer Objects)** and **entities** using simple annotations, eliminating the need for manual mapping code.

## Features

- **Annotation-Based Mapping**: Use `@AutoMap` to define how fields should be mapped.
- **Nested Object Mapping**: Automatically map nested objects (e.g., `User` with `Address`).
- **Custom Converters**: Define custom converters for fields that require special handling.
- **Collection Mapping**: Support for mapping collections like `List`, `Set`, and `Map`.
- **Conditional Mapping**: Map fields only if certain conditions are met.
- **Field Exclusion**: Exclude specific fields from being mapped.
- **Bidirectional Mapping**: Map objects in both directions (e.g., `User` to `UserDTO` and vice versa).
- **Validation Support**: Validate fields during mapping (e.g., `@NotNull`, `@Size`).
- **Lightweight**: No heavy dependencies—just pure Java reflection.
- **Easy Integration**: Works seamlessly with Spring Boot applications.


## Installation

### Maven
Add the following dependency to your `pom.xml`:

```xml
<dependency>
    <groupId>hassan.abidar</groupId>
    <artifactId>automap</artifactId>
    <version>0.0.1</version>
</dependency>

dependencies {
    implementation 'hassan.abidar:automap:0.0.1'
}



---

#### 4. **Quick Start**
- Provide a simple example to help users get started quickly.

```markdown
## Quick Start

### 1. Add the Dependency
Add the AutoMap dependency to your project as shown above.

### 2. Annotate Your Classes
Use the `@AutoMap` annotation to define how fields should be mapped.

#### Example: Entity to DTO
```java
@AutoMap(target = UserDTO.class)
public class User {
    private Long id;
    private String name;
    private String email;
}

public class UserDTO {
    private Long id;
    private String name;
    private String email;
}


User user = new User();
user.setId(1L);
user.setName("John Doe");
user.setEmail("john.doe@example.com");

UserDTO userDTO = AutoMapper.map(user, UserDTO.class);
System.out.println(userDTO.getName()); // Output: John Doe




---

#### 5. **Advanced Usage**
- Provide examples of more advanced features for experienced users.

```markdown
## Advanced Usage

### Nested Object Mapping
AutoMap can handle nested objects automatically.

#### Example:
```java
@AutoMap(target = UserDTO.class)
public class User {
    private Long id;
    private String name;
    private Address address; // Nested object
}

public class UserDTO {
    private Long id;
    private String name;
    private AddressDTO address; // Nested DTO
}


@AutoMap(target = UserDTO.class, customConverter = DateToStringConverter.class)
public class User {
    private Long id;
    private String name;
    private Date birthDate; // Custom conversion needed
}

public class UserDTO {
    private Long id;
    private String name;
    private String birthDate; // Converted to String
}



---

#### 6. **Contributing**
- Encourage contributions and provide guidelines.

```markdown
## Contributing

We welcome contributions to AutoMap! If you'd like to contribute, please follow these steps:

1. Fork the repository.
2. Create a new branch for your feature or bugfix.
3. Make your changes and write tests.
4. Submit a pull request with a detailed description of your changes.

For more information, see our [Contributing Guidelines](CONTRIBUTING.md).


## About the Author

Hi, I'm **Hassan Abidar**, a software engineer passionate about building tools that make developers' lives easier. You can connect with me on [LinkedIn](https://www.linkedin.com/in/hassan-abidar/) or check out my other projects on [GitHub](https://github.com/hassan-abidar).


## Star the Repository ⭐

If you find AutoMap useful, please consider giving it a star on GitHub! Your support helps us grow the project and improve it for everyone.

[![GitHub Stars](https://img.shields.io/github/stars/hassan-abidar/AutoMap-Dependency?style=social)](https://github.com/hassan-abidar/AutoMap-Dependency)